version: "3.7"
services:
    # imagem Docker
    docker:
        build:
            args:
                user: seven
                uid: 1000
            context: ./
            dockerfile: Dockerfile
        image: laravel-app
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - ./:/var/www
        depends_on:
            - redis
            - queue
        networks:
            - laravel_networks

    # nginx
    nginx:
        image: nginx:alpine
        restart: unless-stopped
        ports:
            - 8080:80
        volumes:
            - ./:/var/www
            - ./docker/nginx/:/etc/nginx/conf.d/
        networks:
            - laravel_networks

    # mysql
    mysql:
        image: mysql:latest
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
        volumes:
            - ./.docker/mysql/dbdata:/var/lib/mysql
        ports:
            - 3307:3306
        networks:
            - laravel_networks

    # queue
    queue:
        build:
            args:
                user: seven
                uid: 1000
            context: ./
            dockerfile: Dockerfile
        restart: unless-stopped
        command: "php artisan queue:work"
        volumes:
            - ./:/var/www
        depends_on:
            - redis
        networks:
            - laravel_networks
    
    #phpMyadmin
    phpMyadmin:
        image: phpmyadmin/phpmyadmin
        restart: unless-stopped
        ports:
            - "8081:80"
        environment:
            PMA_HOST: mysql
            PMA_USER: ${DB_USERNAME}
            PMA_PASSWORD: ${DB_PASSWORD}
        depends_on:
            - mysql
        networks:
            - laravel_networks
    
    #redis
    redis:
        image: redis:latest
        restart: unless-stopped
        networks:
            - laravel_networks

networks:
    laravel_networks:
        driver: bridge
